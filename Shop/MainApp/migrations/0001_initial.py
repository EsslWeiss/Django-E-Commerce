# Generated by Django 3.1.2 on 2020-10-28 17:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='Финальная цена')),
                ('in_order', models.BooleanField(default=False)),
                ('for_anonymous_user', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Категория')),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SmartphoneProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Продукт')),
                ('price', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('slug', models.SlugField(unique=True)),
                ('diagonal', models.CharField(max_length=255, verbose_name='Диагональ')),
                ('display', models.CharField(max_length=255, verbose_name='Дисплей')),
                ('resolution', models.CharField(max_length=255, verbose_name='Разрешение экрана')),
                ('ram', models.CharField(max_length=255, verbose_name='Оперативная память')),
                ('sd', models.BooleanField(default=True, verbose_name='Наличие SD карты')),
                ('sd_max_volume', models.CharField(blank=True, choices=[('2', '2 GB'), ('4', '4 GB'), ('6', '6 GB'), ('8', '8 GB'), ('16', '16 GB')], max_length=255, null=True, verbose_name='Максимальный объем SD карты')),
                ('main_camera_mp', models.CharField(max_length=255, verbose_name='Главная камера')),
                ('frontal_camera_mp', models.CharField(max_length=255, verbose_name='Фронтальная камера')),
                ('image', models.ImageField(upload_to='smartphones/', verbose_name='Изображение смартфона')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.category', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotebookProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Продукт')),
                ('price', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Цена')),
                ('description', models.TextField(verbose_name='Описание')),
                ('slug', models.SlugField(unique=True)),
                ('diagonal', models.CharField(max_length=255, verbose_name='Диагональ')),
                ('display', models.CharField(max_length=255, verbose_name='Дисплей')),
                ('processor', models.CharField(max_length=255, verbose_name='Частота процессора')),
                ('ram', models.CharField(max_length=255, verbose_name='Оперативная память')),
                ('time_without_charge', models.CharField(max_length=255, verbose_name='Время работы аккумулятора')),
                ('image', models.ImageField(upload_to='notebooks/', verbose_name='Изображение ноутбука')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.category', verbose_name='Категория')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11, null=True, verbose_name='Номер телефона')),
                ('address', models.CharField(max_length=255, null=True, verbose_name='Адрес')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('full_price', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='Общая цена')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='MainApp.cart', verbose_name='Корзина')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='MainApp.customer', verbose_name='Покупатель')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='MainApp.customer', verbose_name='Владелец корзины'),
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_cart', to='MainApp.CartProduct'),
        ),
    ]
